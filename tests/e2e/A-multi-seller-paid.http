### E2E Test A: Multi-seller cart → Payment → Invoice → Shipped → Delivered → Payout
### Happy path pentru comanda multi-seller cu plată Netopia sandbox

@host = http://localhost:3000
@api = {{host}}/api
@buyerToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
@sellerToken1 = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
@sellerToken2 = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

### 1. Verifică produse disponibile (2 selleri diferiți)
GET {{api}}/products?limit=10
Authorization: Bearer {{buyerToken}}

### 2. Adaugă produse în coș (din 2 selleri diferiți)
POST {{api}}/cart/add
Authorization: Bearer {{buyerToken}}
Content-Type: application/json

{
  "productId": "prod_seller1_1",
  "quantity": 2
}

###

POST {{api}}/cart/add
Authorization: Bearer {{buyerToken}}
Content-Type: application/json

{
  "productId": "prod_seller2_1", 
  "quantity": 1
}

### 3. Verifică coșul
GET {{api}}/cart
Authorization: Bearer {{buyerToken}}

### 4. Creează comandă
POST {{api}}/checkout/create-order
Authorization: Bearer {{buyerToken}}
Content-Type: application/json

{
  "shippingAddress": {
    "name": "Test Buyer",
    "phone": "0712345678",
    "address": "Strada Test 123",
    "city": "București",
    "county": "București",
    "postalCode": "010001"
  }
}

### 5. Simulează callback Netopia (PAID)
POST {{api}}/webhooks/netopia
Content-Type: application/json

{
  "orderId": "{{orderId}}",
  "status": "PAID",
  "transactionId": "sandbox_txn_123",
  "amount": 15000,
  "currency": "RON"
}

### 6. Verifică status comandă (PAID)
GET {{api}}/orders/{{orderId}}
Authorization: Bearer {{buyerToken}}

### 7. Verifică stoc scăzut
GET {{api}}/products/prod_seller1_1
Authorization: Bearer {{sellerToken1}}

### 8. Generează factură
GET {{api}}/orders/{{orderId}}/invoice
Authorization: Bearer {{buyerToken}}

### 9. Seller 1: Pachetează comanda
POST {{api}}/orders/{{orderId}}/pack
Authorization: Bearer {{sellerToken1}}
Content-Type: application/json

{
  "items": [
    {
      "orderItemId": "item_seller1_1",
      "packed": true,
      "notes": "Ambalat cu grijă"
    }
  ]
}

### 10. Creează AWB
POST {{api}}/shipping/awb
Authorization: Bearer {{sellerToken1}}
Content-Type: application/json

{
  "orderId": "{{orderId}}",
  "provider": "cargus",
  "recipient": {
    "name": "Test Buyer",
    "phone": "0712345678",
    "address": "Strada Test 123",
    "city": "București",
    "county": "București",
    "postalCode": "010001"
  },
  "package": {
    "weight": 2.5,
    "dimensions": "30x20x15"
  }
}

### 11. Marchează ca expediată
POST {{api}}/orders/{{orderId}}/ship
Authorization: Bearer {{sellerToken1}}
Content-Type: application/json

{
  "trackingNumber": "CARGUS123456789",
  "provider": "cargus"
}

### 12. Verifică status SHIPPED
GET {{api}}/orders/{{orderId}}
Authorization: Bearer {{buyerToken}}

### 13. Simulează livrare (sau așteaptă cron)
POST {{api}}/orders/{{orderId}}/deliver
Authorization: Bearer {{buyerToken}}
Content-Type: application/json

{
  "deliveredAt": "2025-01-10T10:00:00Z"
}

### 14. Verifică payout creat
GET {{api}}/payouts?sellerId={{sellerId1}}
Authorization: Bearer {{sellerToken1}}

### 15. Rulează payout (sandbox)
POST {{api}}/payouts/{{payoutId}}/run
Authorization: Bearer {{sellerToken1}}
Content-Type: application/json

{
  "provider": "sandbox",
  "bankAccount": "RO49AAAA1B31007593840000"
}

### 16. Verifică payout PAID
GET {{api}}/payouts/{{payoutId}}
Authorization: Bearer {{sellerToken1}}

### 17. Verifică ledger entries
GET {{api}}/ledger?orderId={{orderId}}
Authorization: Bearer {{sellerToken1}}

### TODO: Testează
### - [ ] Coș multi-seller creat corect
### - [ ] Comanda PAID după callback Netopia
### - [ ] Stoc scăzut pentru ambele produse
### - [ ] Factură generată corect
### - [ ] AWB creat cu provider
### - [ ] Status SHIPPED → DELIVERED
### - [ ] Payout creat și executat
### - [ ] Ledger: CHARGE, COMMISSION, PAYOUT
### - [ ] Emailuri trimise (confirmare, factură, tracking)
